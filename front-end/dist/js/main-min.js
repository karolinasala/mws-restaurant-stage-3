let restaurants,neighborhoods,cuisines;var map,markers=[],myLazyLoad=new LazyLoad;document.addEventListener("DOMContentLoaded",e=>{fetchNeighborhoods(),fetchCuisines()}),fetchNeighborhoods=(()=>{DBHelper.fetchNeighborhoods((e,t)=>{null!=e?console.error(e):(self.neighborhoods=t,fillNeighborhoodsHTML())})}),fillNeighborhoodsHTML=((e=self.neighborhoods)=>{const t=document.getElementById("neighborhoods-select");e.forEach(e=>{const a=document.createElement("option");a.innerHTML=e,a.value=e,a.setAttribute("aria-label",e),a.setAttribute("role","option"),t.append(a)})}),fetchCuisines=(()=>{DBHelper.fetchCuisines((e,t)=>{e?console.error(e):(self.cuisines=t,fillCuisinesHTML())})}),fillCuisinesHTML=((e=self.cuisines)=>{const t=document.getElementById("cuisines-select");e.forEach(e=>{const a=document.createElement("option");a.innerHTML=e,a.value=e,a.setAttribute("aria-label",e),a.setAttribute("role","option"),t.append(a)})}),window.initMap=(()=>{self.map=new google.maps.Map(document.getElementById("map"),{zoom:12,center:{lat:40.722216,lng:-73.987501},scrollwheel:!1}),updateRestaurants()}),updateRestaurants=(()=>{const e=document.getElementById("cuisines-select"),t=document.getElementById("neighborhoods-select"),a=e.selectedIndex,s=t.selectedIndex,r=e[a].value,n=t[s].value;DBHelper.fetchRestaurantByCuisineAndNeighborhood(r,n,(e,t)=>{e?console.error(e):(resetRestaurants(t),fillRestaurantsHTML(),myLazyLoad.update())})}),resetRestaurants=(e=>{self.restaurants=[],document.getElementById("restaurants-list").innerHTML="",self.markers.forEach(e=>e.setMap(null)),self.markers=[],self.restaurants=e}),fillRestaurantsHTML=((e=self.restaurants)=>{const t=document.getElementById("restaurants-list");e.forEach(e=>{t.append(createRestaurantHTML(e))}),addMarkersToMap(),myLazyLoad.update()}),createRestaurantHTML=((e=self.restaurants)=>{const t=document.createElement("li");t.setAttribute("role","listitem");const a=document.createElement("img");a.className="restaurant-img",a.src=DBHelper.imageUrlForRestaurant(e),a.setAttribute("aria-label","img_"+e.id),a.setAttribute("role","img");const s=e.description;a.alt=s,t.append(a);const r=document.createElement("h2");r.innerHTML=e.name,t.append(r);const n=document.createElement("div"),o=document.createElement("span");n.setAttribute("aria-label","favorite heart"),o.classList.add("favorite"),e.is_favorite&&o.classList.add("active"),o.innerHTML="ðŸ–¤",o.setAttribute("id",e.id),o.setAttribute("role","button"),o.title=e.is_favorite?"Remove from Favorites":"Add to Favorites",o.addEventListener("click",toggleFavorite),n.append(o),t.append(o);const i=document.createElement("p");i.innerHTML=e.neighborhood,t.append(i);const l=document.createElement("p");l.innerHTML=e.address,t.append(l);const d=document.createElement("a");return d.innerHTML="View Details",d.setAttribute("aria-label","View restaurant details"),d.setAttribute("role","button"),d.href=DBHelper.urlForRestaurant(e),t.append(d),t});var imageLazyLoad=new LazyLoad({elements_selector:".restaurant-img"});function showMap(){const e=document.getElementById("map"),t=document.getElementById("map-button");e.style.display="block",t.style.display="none"}toggleFavorite=(e=>{const t=Number(e.target.getAttribute("id")),a=!e.target.classList.contains("active");DBHelper.fetchFavorite(t,a).then(t=>{e.target.classList.toggle("active"),e.target.title=t.is_favorite?"Remove from Favorites":"Add to Favorites"})}),addMarkersToMap=((e=self.restaurants)=>{e.forEach(e=>{const t=DBHelper.mapMarkerForRestaurant(e,self.map);google.maps.event.addListener(t,"click",()=>{window.location.href=t.url}),self.markers.push(t)})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
